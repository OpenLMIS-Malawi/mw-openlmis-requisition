#%RAML 0.8
---
title: OpenLMIS Malawi Requisition Service API
version: "@version@"
baseUri: "http://localhost:8080"

documentation:
    - title: Getting Started
      content: Welcome to the OpenLMIS Malawi Requisition Service documentation.

schemas:
  - auditLogEntry: !include schemas/auditLogEntry.json

  - auditLogEntryArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "schemas/auditLogEntry.json" }
      }

  - version: |
      {   "$schema": "http://json-schema.org/draft-03/schema",
          "description": "Service version and build information",
          "type": "object",
          "properties": {
              "service": { "type": "string", "required": true},
              "build": { "type": "string", "required": true},
              "branch": { "type": "string", "required": true},
              "timeStamp": { "type": "string", "required": true},
              "version": { "type": "string", "required": true}
          }
      }


  - requisitionDto: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "RequisitionDto",
          "description": "A single requisitionDto",
          "properties": {
              "id": { "type": "string", "title": "id" },
              "createdDate": {"type": "array", "title": "createdDate", "items": {"type": "integer" }, "uniqueItems": false },
              "facility": { "type": "object", "$ref": "schemas/facilityDto.json", "title": "facility" },
              "program": { "type": "object", "$ref": "schemas/programDto.json", "title": "program" },
              "supplyingFacility" : {"type": ["string", "null"], "title": "supplyingFacility"},
              "status": { "type": "string", "title": "status" },
              "emergency": { "type": "boolean", "title": "emergency" },
              "supervisoryNode": { "type": "string", "title": "supervisoryNode" },
              "processingPeriod": { "type": "object", "$ref": "schemas/processingPeriodDto.json", "title": "processingPeriod" },
              "draftStatusMessage": { "type": "string", "title": "draftStatusMessage" },
              "requisitionLineItems": { "type": "array", "title": "requisitionLineItems", "items": { "type": "object", "$ref":"#/schemas/requisitionLineItemDto" }, "uniqueItems": false }
          },
          "required": ["id", "facility", "program", "processingPeriod", "status", "supervisoryNode"]
      }


  - requisitionLineItemDto: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "RequisitionLineItemDto",
          "description": "A single requisitionLineItemDto",
          "properties": {
              "id": { "type": "string", "required": true, "title": "id" },
              "orderable": { "type": "object", "$ref": "#/schemas/orderableDto", "required": true, "title": "orderable" },
              "beginningBalance": { "type": "integer", "required": false, "title": "beginningBalance" },
              "totalReceivedQuantity": { "type": "integer", "required": false, "title": "totalReceivedQuantity" },
              "totalLossesAndAdjustments": { "type": "integer", "required": false, "title": "totalLossesAndAdjustments" },
              "stockOnHand": { "type": "integer", "required": false, "title": "stockOnHand" },
              "requestedQuantity": { "type": "integer", "required": false, "title": "requestedQuantity" },
              "totalConsumedQuantity": { "type": "integer", "required": false, "title": "totalConsumedQuantity" },
              "requestedQuantityExplanation": { "type": "string", "required": false, "title": "requestedQuantityExplanation" },
              "remarks": {"type": "string", "required": true, "title": "remarks" },
              "approvedQuantity": {"type": "integer", "required": true, "title": "approvedQuantity" },
              "total": {"type": "integer", "required": false, "title": "total" },
              "pricePerPack": {"type": "number", "required": false, "title": "pricePerPack" },
              "numberOfNewPatientsAdded": {"type": "number", "required": false, "title": "numberOfNewPatientsAdded" },
              "skipped": {"type": "boolean", "required": false, "title": "skipped" },
              "adjustedConsumption": {"type": "number", "required": false, "title": "adjustedConsumption" },
              "averageConsumption": {"type": "number", "required": false, "title": "averageConsumption" }
          }
      }


  - localizedMessage: !include schemas/localizedMessage.json

  - uuidArray: |
      {
          "type": "array",
          "items": { "type": "string", "title": "id" }
      }

  - requisitionError: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "RequisitionError",
          "description": "A single requisition error",
          "properties": {
              "error": { "type": "object", "$ref": "#/schemas/localizedMessage" },
              "requisitionId": { "type": "string", "title": "id" }
          }
      }

  - requisitionErrorArray: |
      {
          "type": "array",
          "items": { "type": "object", "$ref": "#/schemas/requisitionError" }
      }

  - requisitionsProcessingStatus: |
      {   "type": "object",
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "RequisitionsProcessingStatus",
          "description": "An array of all requsitions that have been processed successfully and an array of errors.",
          "properties": {
              "requisitions": { "type": "object", "$ref": "#/schemas/requisitionDtoArray" },
              "errors": { "type": "object", "$ref": "#/schemas/requisitionErrorArray" }
          }
      }

traits:
    - paginated:
          queryParameters:
              page:
                  description: The page number which should be displayed. Note that the first page is numbered zero rather than one. Additionally, negative and undefined valued are interpreted as zero.
                  type: integer
                  required: false
                  repeat: false
              size:
                  description: The desired size of each page. This specifies the maximum number of values that should be returned by the server. Zero, undefined, and negative values should result in all possible values being returned.
                  type: integer
                  required: false
                  repeat: false
resourceTypes:
    - auditLog:
        description: This represents the audit log for all <<resourcePathName|!singularize>> resources.
        get:
          description: Returns all or part of the resource's audit log
          # Although /auditLog endpoints support "page" and "number" query parameters for pagination,
          # they donâ€™t return the response body and set of pagination-related values expected to be
          # returned for core domain resources.
          is: [ paginated ]
          queryParameters:
              author:
                  displayName: author
                  description: Name of the author of changes which should be returned. By default, all changes are returned regardless of author.
                  type: string
                  required: false
                  repeat: false
              changedPropertyName:
                  displayName: changedPropertyName
                  description: The name of the property about which changes should be returned. If null or empty, changes associated with any and all properties are returned.
                  type: string
                  required: false
                  repeat: false
          responses:
              200:
                body:
                  application/json:
                    schema: auditLogEntryArray
                    example: |
                      [
                        {
                          "changeType": "ValueChange",
                          "globalId": {
                            "entity": "org.openlmis.SomeClass",
                            "cdoId": 1
                          },
                          "commitMetadata": {
                            "author": "SomeUserName",
                            "properties": [],
                            "commitDate": "2016-12-17T19:39:57.621",
                            "id": 3
                          },
                          "property": "PropertyName",
                          "left": "OldValue",
                          "right": "NewValue"
                        }
                      ]
              404:
                description: The specified <<resourcePathName|!singularize>> does not exist.

    - instanceAuditLog:
        description: This represents the audit log for a specified instance of the <<resourcePathName|!singularize>> resource.
        type: auditLog
        uriParameters:
            id:
                type: string
                required: true
                repeat: false
/:
    displayName: Version
    get:
        description: Get version
        responses:
          200:
            description: Returns version information.
            headers:
              X-Content-Type-Options:
              X-XSS-Protection:
            body:
              application/json:
                schema: version

    /widgets:
      displayName: widgets
      get:
        responses:
          200:
      /{id}:
        uriParameters:
          id:
            displayName: id
            type: string
            required: true
            repeat: false
        delete:
          responses:
        get:
          responses:
        put:
          responses:
        post:
          responses:
      /{id}/auditLog:
        type: instanceAuditLog
/api:
  /requisitions:
      displayName: Requisition
      /approve:
          post:
              is: [ secured ]
              body:
                  application/json:
                      schema: uuidArray
              description: Attempts to approve requisitions with UUIDs provided in the request body. It always processes all the requisitions and returns an array of requisitions that have been approved successfully and an array of error messages.
              responses:
                  "200":
                      body:
                        application/json:
                            schema: requisitionsProcessingStatus
                  "400":
                      body:
                        application/json:
                            schema: requisitionsProcessingStatus
      /save:
          put:
              is: [ secured ]
              body:
                  application/json:
                      schema: requisitionDtoArray
              description: Saves requisitions with the UUIDs provided in the request body. It always processes all the requisitions and returns an array of requisitions that have been saved successfully and an array of error messages.
              responses:
                  "200":
                      body:
                        application/json:
                            schema: requisitionsProcessingStatus
                  "400":
                      body:
                        application/json:
                            schema: requisitionsProcessingStatus